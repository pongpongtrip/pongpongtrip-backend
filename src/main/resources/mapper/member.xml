<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.enjoytrip.ws.member.model.mapper.MemberMapper">

	<resultMap type="memberDto" id="member">
		<result column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
	</resultMap>
	
	<!-- ADMIN -->
	<resultMap type="memberDto" id="memberAll" extends="member">
		<result column="user_password" property="userPassword"/>
		<result column="join_date" property="joinDate"/>
		<result column="admin" property="admin"/>
		<result column="email" property="email"/>
	</resultMap>
	
	
	<select id="isMemberDelflag" parameterType="String" resultType="int">
		select count(user_id)
		from members
		where user_id = #{userId} and delflag = 1;
	</select>

	<insert id="registMember" parameterType="memberDto">
		insert into members (user_id, user_name, user_password, join_date, admin, email)
		values (#{userId}, #{userName}, #{userPassword}, now(), 0, #{email});
	</insert>
	
	<update id="registMemberDelflag" parameterType="memberDto">
		update members
		set user_name = #{userName}, user_password = #{userPassword}, join_date = now(), email = #{email}, delflag = 0
		where user_id = #{userId}
	</update>
	
	<select id="loginMember" parameterType="map" resultMap="member">
		select user_id, user_name
		from members
		where user_id = #{userId} and user_password = #{userPassword} and delflag = 0
	</select>
	
	<select id="userInfo" parameterType="string" resultMap="memberAll">
		select user_id, user_name, email, join_date
		from members
		where user_id = #{userid}
	</select>

	<select id="getMemberInfo" parameterType="memberDto" resultMap="memberAll">
		select user_id, user_name, user_password, join_date
		from members
		where user_id = #{userId}
	</select>
	
	<update id="memberUpdate" parameterType="map">
		update members
		set user_name = #{userName}, email = #{email}
		where user_id = #{userId}
	</update>
	
	<delete id="memberDelete" parameterType="String">
		update members
		set delflag = 1		
		where user_id = #{userId}
	</delete>
	
	<select id="idCheck" parameterType="String" resultType="int">
		select count(user_id)
		from members
		where user_id = #{userId} and delflag = 0;
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update members
		set token = #{token}
		where user_id = #{userid}
	</update>
	
	<update id="deleteRefreshToken" parameterType="map">
		update members
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userid}
	</update>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from members
		where user_id = #{userid}
	</select>
	
	<!-- Admin start -->
	<select id="listMember" resultMap="memberAll">
		select user_id, user_name, user_password, email, join_date
		from members
		where user_id not like '%admin%' and delflag = 0
		order by join_date
	</select>
	
	<select id="listMemberById" resultMap="memberAll">
		select user_id, user_name, user_password, email, join_date
		from members
		where user_id not like '%admin%' and delflag = 0 and user_id like '%${userId}%'
		order by join_date
	</select>
	
	<select id="listMemberByName" resultMap="memberAll">
		select user_id, user_name, user_password, email, join_date
		from members
		where user_id not like '%admin%' and delflag = 0 and user_name like '%${userName}%'
		order by join_date
	</select>
	
	<select id="getMember" parameterType="string" resultMap="memberAll">
		select user_id, user_name, user_password, email_id, email_domain, join_date
		from members
		where user_id = #{userId}
	</select>
	
	<update id="updateMemberAdmin" parameterType="memberDto">
		update members
		<trim prefix="set" suffixOverrides=",">
			<if test="userPassword != null">user_password = #{userPassword},</if>
		</trim>
		where user_id = #{userId}
	</update>
	
	<delete id="deleteMemberAdmin" parameterType="String">
		delete from members
		where user_id = #{userId}
	</delete>
	<!-- Admin end -->
	
	<select id="checkPassword" parameterType="map" resultType="int">
		select count(user_id)
		from members
		where user_id = #{userId} and user_password = #{userPassword}
	</select>
	
	
</mapper>